/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package gradle.tag.plugin;

import gradle.tag.plugin.task.GitCreateTagTask;
import gradle.tag.plugin.task.GitHeadTagTask;
import gradle.tag.plugin.task.GitUncommittedChangeTask;
import org.gradle.api.Plugin;
import org.gradle.api.Project;

public class GradleGitTagPlugin implements Plugin<Project> {

    public static final String TASK_GROUP_NAME = "git tag";

    public void apply(Project project) {
        // Register a task
        GitUncommittedChangeTask gitCheckUncommittedChangesTask =
                project.getTasks().register("gitUncommittedChanges", GitUncommittedChangeTask.class).get();
        gitCheckUncommittedChangesTask.setGroup(TASK_GROUP_NAME);

        GitHeadTagTask headTagTask = project.getTasks().register("gitHeadTag", GitHeadTagTask.class).get();
        headTagTask.dependsOn(gitCheckUncommittedChangesTask)
                .setOnlyIf(task -> !(boolean) gitCheckUncommittedChangesTask.getExtensions().getByName("result"));
        headTagTask.setGroup(TASK_GROUP_NAME);

        GitCreateTagTask createTagTask = project.getTasks().register("gitCreateTag", GitCreateTagTask.class).get();
        createTagTask.dependsOn(headTagTask)
                .dependsOn(gitCheckUncommittedChangesTask)
                .setOnlyIf(task -> !headTagTask.getState().getSkipped()
                        && !(boolean) headTagTask.getExtensions().getByName("result"));
        createTagTask.setGroup(TASK_GROUP_NAME);
    }
}
